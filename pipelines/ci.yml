# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: 'version.major'
  value: '1'
- name: 'version.minor'
  value: '0'
- name: 'version.revision'
  value: $(Build.BuildId)

steps:
- task: TfxInstaller@3
  displayName: 'Install tfx-cli'
  inputs:
    version: 'v0.7.x'
    
- script: npm i
  displayName: 'Install NPM packages'

- script: npm run build
  displayName: 'Build'

- task: PackageAzureDevOpsExtension@3
  displayName: 'Package for testing'
  inputs:
    rootFolder: 
    publisherId: 'freerangeeggs-dev'
    extensionName: '[Dev] Post To Office 365 Connector'
    extensionVersion: '$(version.major).$(version.minor).$(version.revision)'
    updateTasksVersion: true
    outputPath: '$(Build.ArtifactStagingDirectory)'

- task: PackageAzureDevOpsExtension@3
  displayName: 'Package for prod'
  inputs:
    rootFolder: 
    publisherId: 'freerangeeggs'
    extensionName: 'Post To Office 365 Connector'
    extensionVersion: '$(version.major).$(version.minor).$(version.revision)'
    updateTasksVersion: true
    outputPath: '$(Build.ArtifactStagingDirectory)'
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'packages'
